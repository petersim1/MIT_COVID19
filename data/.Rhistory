for (patient in unique(PD$patient_id)) {
PD_subbed <- PD[PD$patient_id == patient,]
if (nrow(PD_subbed) > 1) {
final_diag = max(PD_subbed$diagnosis_date)
diagnosis_to_show <- rbind(diagnosis_to_show,tail(PD_subbed[PD_subbed$diagnosis_date == final_diag,],1))
} else {
diagnosis_to_show <- rbind(diagnosis_to_show,PD_subbed)
}
}
nrow(diagnosis_to_show)
table(diagnosis_to_show$diagnosis)
table(diagnosis_to_show$patient_id,diagnosis_to_show$diagnosis)
diagnosis_to_show <- NULL
for (patient in unique(PD$patient_id)) {
PD_subbed <- PD[PD$patient_id == patient,]
if (nrow(PD_subbed) > 1) {
final_diag = max(PD_subbed$diagnosis_date)
diagnosis_to_show <- rbind(diagnosis_to_show,tail(PD_subbed[PD_subbed$diagnosis_date == final_diag,],1))
} else {
diagnosis_to_show <- rbind(diagnosis_to_show,PD_subbed)
}
}
table(diagnosis_to_show$diagnosis,diagnosis_to_show$First_Drugs)
as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F))
as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F),columns=c('Number of Days','Freq'))
as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F)) %>% colnames('a','b')
table_out <- as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F)) colnames(table_out) <- c('Days until Treatment','Freq')
table_out <- as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F)) colnames(table_out) <- c('Days until Treatment','Freq')
table_out <- as.data.frame(table(PD_earliest_diag$Days_to_Treatment,exclude = F)) colnames(table_out) <- c('Days until Treatment','Freq')
diagnosis_to_show
for (i in seq(nrow(diagnosis_to_show))) {
patient = diagnosis_to_show$patient_id[i]
PT_subbed <- PT[PT$patient_id == patient,]
duration_treatment = max(PT_subbed$treatment_date) - min(PT_subbed$treatment_date)
diagnosis_to_show$Treatment_Duration <- duration_treatment
}
for (i in seq(nrow(diagnosis_to_show))) {
patient = diagnosis_to_show$patient_id[i]
if (!(patient %in% PT$patient_id)) {
diagnosis_to_show$Treatment_Duration <- NA
next
}
PT_subbed <- PT[PT$patient_id == patient,]
duration_treatment = max(PT_subbed$treatment_date) - min(PT_subbed$treatment_date)
diagnosis_to_show$Treatment_Duration <- duration_treatment
}
diagnosis_to_show
for (i in seq(nrow(diagnosis_to_show))) {
patient = diagnosis_to_show$patient_id[i]
if (!(patient %in% PT$patient_id)) {
diagnosis_to_show$Treatment_Duration[i] <- NA
next
}
PT_subbed <- PT[PT$patient_id == patient,]
duration_treatment = max(PT_subbed$treatment_date) - min(PT_subbed$treatment_date)
diagnosis_to_show$Treatment_Duration[i] <- duration_treatment
}
diagnosis_to_show
diagnosis_to_show <- NULL
for (patient in unique(PD$patient_id)) {
PD_subbed <- PD[PD$patient_id == patient,]
if (nrow(PD_subbed) > 1) {
final_diag = max(PD_subbed$diagnosis_date)
diagnosis_to_show <- rbind(diagnosis_to_show,tail(PD_subbed[PD_subbed$diagnosis_date == final_diag,],1))
} else {
diagnosis_to_show <- rbind(diagnosis_to_show,PD_subbed)
}
}
table(diagnosis_to_show$diagnosis,diagnosis_to_show$First_Drugs)
for (i in seq(nrow(diagnosis_to_show))) {
patient = diagnosis_to_show$patient_id[i]
if (!(patient %in% PT$patient_id)) {
diagnosis_to_show$Treatment_Duration_days[i] <- NA
next
}
PT_subbed <- PT[PT$patient_id == patient,]
duration_treatment = max(PT_subbed$treatment_date) - min(PT_subbed$treatment_date)
diagnosis_to_show$Treatment_Duration_days[i] <- duration_treatment
}
diagnosis_to_show
diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer',]
table(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','drug_code'])
diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','drug_code']
table(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','First_Drugs'])
ggplot(diagnosis_to_show,aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .1)
ggplot(diagnosis_to_show,aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw()
ggplot(diagnosis_to_show,aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw()
ggplot(na.omit(diagnosis_to_show),aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw()
ggplot(na.omit(diagnosis_to_show),aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw() + labs(title='Comparing First Line Treatments with the Duration of Treatment (days)')
ggplot(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer']),aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw() + labs(title='Comparing First Line Treatments with the Duration of Treatment (days)')
ggplot(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer',]),aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw() + labs(title='Comparing First Line Treatments with the Duration of Treatment (days)')
ggplot(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer',]),aes(x=First_Drugs,y=Treatment_Duration_days)) +
geom_jitter(height = 0,width = .2) + theme_bw() + labs(title='Breast Cancer First Line Treatments vs. Duration of Treatment (days)')
table(diagnosis_to_show$diagnosis_code,diagnosis_to_show$Treatment_Duration_days)
table(diagnosis_to_show$diagnosis_code,diagnosis_to_show$First_Drugs)
diagnosis_to_show
pairwise.t.test(diagnosis_to_show,c('First_Drugs','Treatment_Duration_days'))
pairwise.t.test(diagnosis_to_show$First_Drugs,diagnosis_to_show$Treatment_Duration_days)
diagnosis_to_show
unique(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','First_Drugs']
unique(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','First_Drugs'])
unique(na.omit(diagnosis_to_show[diagnosis_to_show$diagnosis == 'Breast Cancer','First_Drugs']))
rep(c('A','B','A,B'),3)
sort(rep(c('A','B','A,B'),3))
stat_test = as.data.frame([sort(rep(c('A','B','A,B'),3))],[rep(c('A','B','A,B'),3)])
stat_test = as.data.frame([[sort(rep(c('A','B','A,B'),3))],[rep(c('A','B','A,B'),3)]])
stat_test[,1] = sort(rep(c('A','B','A,B'),3))
stat_test <- NULL
stat_test[,1] = sort(rep(c('A','B','A,B'),3))
stat_test <- as.data.frame(matrix(data = 0,nrow = 9,ncol = 2))
stat_test[,1] = sort(rep(c('A','B','A,B'),3))
stat_test
stat_test[,2] = rep(c('A','B','A,B'),3)
stat_test
names(diagnosis_to_show)
length(stat_test)
for (i in seq(nrow(stat_test))) {
x = diagnosis_to_show[diagnosis_to_show$First_Drugs == stat_test[i,1],'Treatment_Duration_days']
y = diagnosis_to_show[diagnosis_to_show$First_Drugs == stat_test[i,2],'Treatment_Duration_days']
stat_test$t.test[i] <- wilcox.test(x,y)
}
stat_test
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=7))
colnames(stat_create) = c('First_Line_Drug','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration')
stat_create[,1] <- c('A','B','A,B')
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=7))
colnames(stat_create) = c('First_Line_Drug','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration')
stat_create[,1] <- c('A','B','A,B')
for (i in seq(3)) {
drugs = stat_create[i]
days <- diagnosis_to_show[diagnosis_to_show$First_Drugs == drug,'Treatment_Duration_days']
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
for (i in seq(3)) {
drugs = stat_create[i]
days <- diagnosis_to_show[diagnosis_to_show$First_Drugs == drugs,'Treatment_Duration_days']
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
stat_create
diagnosis_to_show
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=7))
colnames(stat_create) = c('First_Line_Drug','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration')
stat_create[,1] <- c('A','B','A,B')
for (i in seq(3)) {
drugs = stat_create[i,1]
days <- diagnosis_to_show[diagnosis_to_show$First_Drugs == drugs & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
stat_create
seq(3)
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
stat_create
drug
diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
mean(days)
mean(days)
mean(list(days))
days <- diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
days
mean(days)
days[1] - days[2]
mean(c(1,2,3,4,5))
mean(array(days))
mean(as.numeric(days))
typeof(days)
class(days)
mean(c(days))
?mean
mean(days,na.rm = T)
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=7))
colnames(stat_create) = c('First_Line_Drug','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
stat_create
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=8))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
}
stat_create
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration','t.test_A','t.test_B','t.test_C')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)
}
}
stat_create
days
days2
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11))
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11)).pval
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11))['pval']
dir(wilcox.test())
dir(wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11)))
var(wilcox.test())
var(wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11)))
?wilcox.test
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11)).p.values
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11)).p.value
wilcox.test(c(1,2,3,4,5,6),c(7,8,9,10,11))['p.value']
wilcox.test(c(1,2,3,4,5,6),c(1,2,3,4,5,6))['p.value']
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration','t.test_A','t.test_B','t.test_C')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)['p.value']
}
}
stat_create
stat_test <- as.data.frame(matrix(data = 0,nrow = 9,ncol = 2))
stat_test[,1] = sort(rep(c('A','B','A,B'),3))
stat_test[,2] = rep(c('A','B','A,B'),3)
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration','t.test_A','t.test_B','t.test_C')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)['p.value']
}
}
stat_create
wilcox.test(c(1,2,3,4,5),c(1,2,3,4,6))
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6))
as.numeric(wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6)))
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6)).statistic
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6))$statistic
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6),conf.int = T)$statistic
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6),conf.int = T)$conf.int
t.test(c(1,2,3,4,5),c(1,2,3,5,6))
wilcox.test(c(1,2,3,4,5),c(1,2,3,5,6))
stat_create
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration','t.test_A','t.test_B','t.test_AB')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)['p.value']
}
}
stat_create
stat_create
na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
na.omit(diagnosis_to_show)[diagnosis_to_show$First_Drugs == 'A' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days']
na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A,B' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
a <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
a
a[1]
b <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == 'A,B' &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
b
mean(b)
t.test(a,b)
wilcox.test(a,b)
wilcox.test(a,b,conf.int = T)
wilcox.test(a,b,conf.int = T,conf.level = T)
wilcox.test(a,b,conf.int = T)
stat_create
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)['p.value']
}
}
stat_create
stat_create <- as.data.frame(matrix(0,nrow=3,ncol=11))
colnames(stat_create) = c('First_Line_Drug','num_obs','Mean_Duration','sd_Duration',
'median_Duration','cv_duration','min_duration',
'max_duration','w.test_A','w.test_B','w.test_AB')
stat_create$First_Line_Drug <- c('A','B','A,B')
for (i in seq(3)) {
drug = stat_create$First_Line_Drug[i]
days <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug &  diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create$num_obs[i] = length(days)
stat_create$Mean_Duration[i] = mean(days)
stat_create$sd_Duration[i] = sd(days)
stat_create$median_Duration[i] = median(days)
stat_create$cv_duration[i] = sd(days)/mean(days)
stat_create$min_duration[i] = min(days)
stat_create$max_duration[i] = max(days)
for (j in seq(3)) {
drug2 = stat_create$First_Line_Drug[j]
days2 <- na.omit(diagnosis_to_show[diagnosis_to_show$First_Drugs == drug2 & diagnosis_to_show$diagnosis == 'Breast Cancer','Treatment_Duration_days'])
stat_create[i,8+j] = wilcox.test(days,days2)['p.value']
}
}
stat_create
stat_create
for (i in seq(nrow(PD))) {
patient = PD$patient_id[i]
if (patient %in% PT$patient_id) {
PT_subbed <- PT[PT$patient_id==patient,]
first_treat_date = min(PT_subbed[,'treatment_date'])
first_drugs_given = paste(sort(unique(PT_subbed[PT_subbed$treatment_date ==
first_treat_date,'drug_code'])),collapse=',')
} else {
PD$First_Drugs[i] <- NA
next
}
PD$First_Drugs[i] <- first_drugs_given
}
first_drugs_given
install.packages(c("httr", "jsonlite","XML"))
library('XML')
URL = 'https://www.nass.usda.gov/Quick_Stats/Lite/'
site = GET(URL)
site_content = content(site,as = 'text')
library("httr")
library("jsonlite")
URL = 'https://www.nass.usda.gov/Quick_Stats/Lite/'
site = GET(URL)
site_content = content(site,as = 'text')
htmlParse(site_content)
html = htmlParse(site_content)
typeof(html)
readHTMLTable(html)
readLines(URL)
bookshtml.df1  <- readLines(URL) %>%
htmlParse() %>%
readHTMLTable(which = 1)
bookshtml.df1  <- readLines(URL) %>%  htmlParse() %>% readHTMLTable(which = 1)
for line in readLines(URL) {
parsed <- htmlParse(line)
tabled <- readHTMLTable(parsed ,which = 1)
bookshtml.df1 <- tabled
}
for (line in readLines(URL)) {
parsed <- htmlParse(line)
tabled <- readHTMLTable(parsed ,which = 1)
bookshtml.df1 <- tabled
}
df3 <- xmlToDataFrame(xmlParse(URL))
setwd("data")
setwd("data/")
pwd
getwd()
setwd("/Users/petersimone/Documents/Coding_Projects/MIT_COVID19/data/")
HealthCare_Capacity<-read.table("HealthCare_Capacity.modified.csv",header = F,sep="\t",skip = 1,stringsAsFactors = F)
US_County_Level<-read.csv("US_County_Level.modified.csv",header = T,stringsAsFactors = F)
US_County_Population<-read.table("US_County_Population.modified.txt",header = T,sep = "\t",stringsAsFactors = F,quote = "")
state_code_map<-read.table("/Users/stevensmith/Projects/MIT_COVID19/data/state_code_map.txt",header = T,sep = "\t",stringsAsFactors = F)
state_code_map<-read.table("state_code_map.txt",header = T,sep = "\t",stringsAsFactors = F)
head(HealthCare_Capacity)
head(US_County_Level)
head(US_County_Population)
US_County_Population<-separate(US_County_Population, Geographic.Area, into = c("county","State"), sep = ", ")
US_County_Population$county<-gsub(US_County_Population$county,pattern = "^\\.",replacement = "")
library(separate)
??separate
library(tidyr)
US_County_Population<-separate(US_County_Population, Geographic.Area, into = c("county","State"), sep = ", ")
US_County_Population$county<-gsub(US_County_Population$county,pattern = "^\\.",replacement = "")
US_County_Population$county<-gsub(US_County_Population$county,pattern = " County",replacement = "")
setdiff(US_County_Level$county,US_County_Population$county)
setdiff(US_County_Population$county,US_County_Level$county)
names(HealthCare_Capacity)<-c("HRR","Total Hospital Beds","Total ICU Beds","Available Hospital Beds","Potentially Available Hospital Beds","Available ICU Beds","Potentially Available ICU Beds","Adult Population","Population 65 over")
HealthCare_Capacity<-separate(HealthCare_Capacity, HRR, into = c("county","state_code"), sep = ", ")
#HealthCare_Capacity[HealthCare_Capacity$county=="Manhattan","county"]<-"New York City"
sum(HealthCare_Capacity$county=="New York")
setdiff(US_County_Level$county,HealthCare_Capacity$County)
setdiff(HealthCare_Capacity$county,US_County_Level$county)
intersect(HealthCare_Capacity$county,HealthCare_Capacity$county)
HealthCare_Capacity<-merge(HealthCare_Capacity,state_code_map)
US_County_Population$UID<-paste0(US_County_Population$county,"_",US_County_Population$State)
HealthCare_Capacity$UID<-paste0(HealthCare_Capacity$county,"_",HealthCare_Capacity$State)
US_County_Level$UID<-paste0(US_County_Level$county,"_",US_County_Level$state)
US_County_Population$county
tmp<-merge(select(US_County_Population,-c("county","State")),select(HealthCare_Capacity,-c("county","State")),by.x = "UID",by.y="UID",all = F)
master_table<-merge(select(US_County_Level,-c("county","state")),tmp,by.x = "UID",by.y="UID",all = F)
tmp<-merge(select(US_County_Population,-c("county","State")),select(HealthCare_Capacity,-c("county","State")),by.x = "UID",by.y="UID",all = F)
US_County_Population$county
tmp<-merge(select(US_County_Population,-c("county","State")),select(HealthCare_Capacity,-c("county","State")),by.x = "UID",by.y="UID",all = F)
??select
library(memisc)
tmp<-merge(select(US_County_Population,-c("county","State")),select(HealthCare_Capacity,-c("county","State")),by.x = "UID",by.y="UID",all = F)
library(rvest)
tmp<-merge(select(US_County_Population,-c("county","State")),select(HealthCare_Capacity,-c("county","State")),by.x = "UID",by.y="UID",all = F)
select(US_County_Population,-c("county","State"))
select(US_County_Population,!c("county","State"))
dir(select)
?select
select(col(US_County_Population),-c("county","State"))
col(US_County_Population)
cols(US_County_Population)
colnames(US_County_Population)
tmp<-merge(select(US_County_Population,c("county","State")),select(HealthCare_Capacity,c("county","State")),by.x = "UID",by.y="UID",all = F)
